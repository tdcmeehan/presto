name: Maven OWASP Dependency Check
on: [pull_request]

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: pr

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Cache OWASP database
        uses: actions/cache@v4
        id: cache-owasp
        with:
          path: ~/.owasp
          key: owasp-cache-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            owasp-cache-${{ runner.os }}-
            owasp-cache-

      - name: Run OWASP check on base branch
        working-directory: base
        run: |
          mvn org.owasp:dependency-check-maven:10.0.4:aggregate \
            -DskipTests \
            -Dformat=JSON \
            -DprettyPrint=true \
            -DfailBuildOnCVSS=11 \
            -DossindexAnalyzerEnabled=true \
            -DnvdApiAnalyzerEnabled=false \
            -DnodeAnalyzerEnabled=false \
            -DassemblyAnalyzerEnabled=false \
            -DcentralAnalyzerEnabled=false \
            -DnuspecAnalyzerEnabled=false \
            -DnvdValidForHours=8760 \
            -DdataDirectory=~/.owasp/dependency-check-data \
            || true  # Don't fail, we just want the report

      - name: Run OWASP check on PR branch
        working-directory: pr
        run: |
          mvn org.owasp:dependency-check-maven:10.0.4:aggregate \
            -DskipTests \
            -Dformat=JSON \
            -DprettyPrint=true \
            -DfailBuildOnCVSS=11 \
            -DossindexAnalyzerEnabled=true \
            -DnvdApiAnalyzerEnabled=false \
            -DnodeAnalyzerEnabled=false \
            -DassemblyAnalyzerEnabled=false \
            -DcentralAnalyzerEnabled=false \
            -DnuspecAnalyzerEnabled=false \
            -DnvdValidForHours=8760 \
            -DdataDirectory=~/.owasp/dependency-check-data \
            || true  # Don't fail, we just want the report

      - name: Compare and fail on new CVEs
        run: |
          # Extract CVEs from both branches
          base_cves=$(cat base/target/dependency-check-report.json 2>/dev/null | jq -r '.dependencies[].vulnerabilities[]?.name' | grep -E '^CVE-[0-9]{4}-[0-9]+$' | sort -u)
          pr_cves=$(cat pr/target/dependency-check-report.json 2>/dev/null | jq -r '.dependencies[].vulnerabilities[]?.name' | grep -E '^CVE-[0-9]{4}-[0-9]+$' | sort -u)

          # Find new CVEs introduced in PR
          new_cves=$(comm -13 <(echo "$base_cves") <(echo "$pr_cves"))

          if [ -n "$new_cves" ]; then
            echo "❌ New vulnerabilities introduced in PR:"
            echo "$new_cves"

            # Show details for each new CVE
            for cve in $new_cves; do
              echo ""
              echo "Details for $cve:"
              cat pr/target/dependency-check-report.json | jq ".dependencies[].vulnerabilities[] | select(.name == \"$cve\")"
            done

            exit 1
          else
            echo "✅ No new vulnerabilities introduced"
          fi

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: owasp-reports
          path: |
            base/target/dependency-check-report.json
            pr/target/dependency-check-report.json
