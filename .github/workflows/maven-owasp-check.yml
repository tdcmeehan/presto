name: Maven OWASP Dependency Check
on: [pull_request]

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: pr

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Get date for cache key
        id: get-date
        run: echo "date=$(date +'%Y-%m')" >> $GITHUB_OUTPUT

      - name: Restore OWASP database cache
        uses: actions/cache/restore@v4
        id: cache-owasp-restore
        with:
          path: ~/.owasp/dependency-check-data
          key: owasp-cache-${{ runner.os }}-${{ steps.get-date.outputs.date }}
          restore-keys: |
            owasp-cache-${{ runner.os }}-

      - name: Debug cache status
        run: |
          echo "=== Cache debugging ==="
          echo "Cache hit: ${{ steps.cache-owasp-restore.outputs.cache-hit }}"
          echo "Cache primary key: ${{ steps.cache-owasp-restore.outputs.cache-primary-key }}"
          echo "Cache matched key: ${{ steps.cache-owasp-restore.outputs.cache-matched-key }}"
          echo "Cache key requested: owasp-cache-${{ runner.os }}-${{ steps.get-date.outputs.date }}"
          echo "Home directory: $HOME"
          echo "Current directory: $(pwd)"
          echo ""
          echo "=== OWASP data directory status ==="
          if [ -d "$HOME/.owasp/dependency-check-data" ]; then
            echo "OWASP data directory exists"
            echo "Directory size: $(du -sh $HOME/.owasp/dependency-check-data | cut -f1)"
            echo "Number of files: $(find $HOME/.owasp/dependency-check-data -type f | wc -l)"
            echo ""
            echo "=== H2 database files ==="
            ls -la $HOME/.owasp/dependency-check-data/*.db 2>/dev/null || echo "No .db files found"
            ls -la $HOME/.owasp/dependency-check-data/odc.* 2>/dev/null || echo "No odc.* files found"
          else
            echo "OWASP data directory does NOT exist"
            mkdir -p $HOME/.owasp/dependency-check-data
            echo "Created empty OWASP data directory"
          fi
          echo ""

      - name: Run OWASP check on base branch
        working-directory: base
        run: |
          mvn org.owasp:dependency-check-maven:12.1.3:aggregate \
            -DskipTests \
            -Dformat=JSON \
            -DprettyPrint=true \
            -DfailBuildOnCVSS=11 \
            -DossindexAnalyzerEnabled=true \
            -DnvdApiAnalyzerEnabled=false \
            -DnodeAnalyzerEnabled=false \
            -DassemblyAnalyzerEnabled=false \
            -DcentralAnalyzerEnabled=false \
            -DnuspecAnalyzerEnabled=false \
            -DnvdValidForHours=8760 \
            -DdataDirectory=$HOME/.owasp/dependency-check-data \
            || true  # Don't fail, we just want the report

      - name: Debug cache after base branch scan
        run: |
          echo "=== OWASP data directory after BASE scan ==="
          if [ -d "$HOME/.owasp/dependency-check-data" ]; then
            echo "Directory size: $(du -sh $HOME/.owasp/dependency-check-data | cut -f1)"
            echo "Number of files: $(find $HOME/.owasp/dependency-check-data -type f | wc -l)"
            echo "Recently modified files (last 5):"
            find $HOME/.owasp/dependency-check-data -type f -printf '%T@ %p\n' | sort -rn | head -5 | cut -d' ' -f2- | xargs ls -la
          else
            echo "ERROR: OWASP data directory missing after base scan!"
          fi
          echo ""

      - name: Run OWASP check on PR branch
        working-directory: pr
        run: |
          mvn org.owasp:dependency-check-maven:12.1.3:aggregate \
            -DskipTests \
            -Dformat=JSON \
            -DprettyPrint=true \
            -DfailBuildOnCVSS=11 \
            -DossindexAnalyzerEnabled=true \
            -DnvdApiAnalyzerEnabled=false \
            -DnodeAnalyzerEnabled=false \
            -DassemblyAnalyzerEnabled=false \
            -DcentralAnalyzerEnabled=false \
            -DnuspecAnalyzerEnabled=false \
            -DnvdValidForHours=8760 \
            -DdataDirectory=$HOME/.owasp/dependency-check-data \
            || true  # Don't fail, we just want the report

      - name: Debug cache after PR branch scan
        run: |
          echo "=== OWASP data directory after PR scan ==="
          if [ -d "$HOME/.owasp/dependency-check-data" ]; then
            echo "Directory size: $(du -sh $HOME/.owasp/dependency-check-data | cut -f1)"
            echo "Number of files: $(find $HOME/.owasp/dependency-check-data -type f | wc -l)"
            echo ""
            echo "=== Checking for database files ==="
            ls -la $HOME/.owasp/dependency-check-data/*.mv.db 2>/dev/null || echo "No *.mv.db files found"
            ls -la $HOME/.owasp/dependency-check-data/*.trace.db 2>/dev/null || echo "No *.trace.db files found"
          else
            echo "ERROR: OWASP data directory missing after PR scan!"
          fi
          echo ""
          echo "=== Report files check ==="
          ls -la base/target/dependency-check-report.json 2>/dev/null || echo "Base report not found"
          ls -la pr/target/dependency-check-report.json 2>/dev/null || echo "PR report not found"

      - name: Compare and fail on new CVEs
        run: |
          # Extract CVEs from both branches
          base_cves=$(cat base/target/dependency-check-report.json 2>/dev/null | jq -r '.dependencies[].vulnerabilities[]?.name' | grep -E '^CVE-[0-9]{4}-[0-9]+$' | sort -u)
          pr_cves=$(cat pr/target/dependency-check-report.json 2>/dev/null | jq -r '.dependencies[].vulnerabilities[]?.name' | grep -E '^CVE-[0-9]{4}-[0-9]+$' | sort -u)

          # Find new CVEs introduced in PR
          new_cves=$(comm -13 <(echo "$base_cves") <(echo "$pr_cves"))

          if [ -n "$new_cves" ]; then
            echo "❌ New vulnerabilities introduced in PR:"
            echo "$new_cves"
            echo ""

            # Show details for each new CVE
            for cve in $new_cves; do
              echo "=================================================="
              echo "CVE: $cve"
              echo "=================================================="

              # Find which dependencies have this CVE
              cat pr/target/dependency-check-report.json | jq -r ".dependencies[] | select(.vulnerabilities[]?.name == \"$cve\") | \"Module: \" + (.projectReferences // [\"root\"])[0] + \"\nDependency: \" + .fileName + \"\nPackage: \" + .packages[0].id + \"\nDescription: \" + (.vulnerabilities[] | select(.name == \"$cve\") | .description)"

              echo ""
            done

            exit 1
          else
            echo "✅ No new vulnerabilities introduced"
          fi

      - name: Final cache check before save
        if: always()
        run: |
          echo "=== Final check before GitHub saves cache ==="
          echo "Checking what will be cached:"
          if [ -d "$HOME/.owasp/dependency-check-data" ]; then
            echo "✅ $HOME/.owasp/dependency-check-data EXISTS"
            echo "Size: $(du -sh $HOME/.owasp/dependency-check-data | cut -f1)"
            echo "Files: $(find $HOME/.owasp/dependency-check-data -type f | wc -l)"
            ls -la $HOME/.owasp/dependency-check-data/
          else
            echo "❌ $HOME/.owasp/dependency-check-data does NOT exist!"
          fi
          echo ""
          echo "Checking tilde path (what cache action uses):"
          if [ -d ~/.owasp/dependency-check-data ]; then
            echo "✅ ~/.owasp/dependency-check-data EXISTS"
            echo "Size: $(du -sh ~/.owasp/dependency-check-data | cut -f1)"
          else
            echo "❌ ~/.owasp/dependency-check-data does NOT exist!"
          fi

      - name: Save OWASP database cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: ~/.owasp/dependency-check-data
          key: owasp-cache-${{ runner.os }}-${{ steps.get-date.outputs.date }}

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: owasp-reports
          path: |
            base/target/dependency-check-report.json
            pr/target/dependency-check-report.json
